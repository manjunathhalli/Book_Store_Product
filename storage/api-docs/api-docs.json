{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger Integration with PHP Laravel",
        "description": "Integrete Swagger in Laravel application",
        "contact": {
            "email": "manjunathhalli629@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/addAddress": {
            "post": {
                "summary": "user add address",
                "description": "User can add address",
                "operationId": "abd1c37c08074a7a38aead269f18a510",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "address",
                                    "city",
                                    "state",
                                    "landmark",
                                    "pincode",
                                    "address_type"
                                ],
                                "properties": {
                                    "address": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "landmark": {
                                        "type": "string"
                                    },
                                    "pincode": {
                                        "type": "integer"
                                    },
                                    "address_type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": " Address Added Successfully"
                    },
                    "401": {
                        "description": "Address alredy present in the user"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/updateAddress": {
            "post": {
                "summary": "user update Address ",
                "description": "User can updateing the Address",
                "operationId": "70a93647591ea23a0125c8906cf88bc3",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id",
                                    "address",
                                    "city",
                                    "state",
                                    "landmark",
                                    "pincode",
                                    "address_type"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "landmark": {
                                        "type": "string"
                                    },
                                    "pincode": {
                                        "type": "integer"
                                    },
                                    "address_type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Address Updated Successfully"
                    },
                    "401": {
                        "description": "Address not present please add address first"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/deleteAddress": {
            "post": {
                "summary": "user delete Address ",
                "description": "User can delete the Address",
                "operationId": "7ee01710cba1151aafc2446826cede19",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Address deleted Sucessfully"
                    },
                    "404": {
                        "description": "Invalid Authentication Token"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/getAddress": {
            "get": {
                "summary": "Get Address ",
                "description": "Get Address",
                "operationId": "957862060ee76d700293468a55f92cf5",
                "requestBody": {},
                "responses": {
                    "201": {
                        "description": "Fetched Address Successfully"
                    },
                    "404": {
                        "description": "Address not found"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/addingBook": {
            "post": {
                "summary": "addBook to s3 bucket ",
                "description": "addbook from Admin only",
                "operationId": "c2ff2892dbef923790bbb19735113cad",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "author",
                                    "image",
                                    "Price",
                                    "quantity"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "author": {
                                        "type": "string"
                                    },
                                    "image": {
                                        "type": "file"
                                    },
                                    "Price": {
                                        "type": "decimal"
                                    },
                                    "quantity": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book created successfully"
                    },
                    "404": {
                        "description": "Invalid authorization toke"
                    },
                    "401": {
                        "description": "Book is already exist in there"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/updateBookById": {
            "post": {
                "summary": "updateBook in s3 bucket ",
                "description": "updateBook from Admin only",
                "operationId": "61f36dda042966f7c0faeefee548631c",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "author",
                                    "image",
                                    "Price"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "author": {
                                        "type": "string"
                                    },
                                    "image": {
                                        "type": "file"
                                    },
                                    "Price": {
                                        "type": "decimal"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book updated Sucessfully"
                    },
                    "404": {
                        "description": "Invalid authorization token"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/addQuantityToExistBook": {
            "post": {
                "summary": "add quantity to existing book ",
                "description": "add quantity to book",
                "operationId": "1fc31edf7c300257c2faada0aa3e685d",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id",
                                    "quantity"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "quantity": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book Quantity updated Successfully"
                    },
                    "404": {
                        "description": "Couldnot found a book with that given id"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/deleteBookById": {
            "post": {
                "summary": "delete in s3 bucket ",
                "description": "deleted Book from s3 bucket and databse ",
                "operationId": "b8fbc4623ee546cda0f2f799f6071235",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book Deleted Sucessfully"
                    },
                    "404": {
                        "description": "Invalid authorization token"
                    },
                    "401": {
                        "description": "NOT AN ADMIN"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/displayAllBooks": {
            "get": {
                "summary": "display all books from book store ",
                "description": "get all books from bookstore ",
                "operationId": "2c28750ebd567bc3ae94d13cf1ac51db",
                "requestBody": {},
                "responses": {
                    "201": {
                        "description": "Display All books are"
                    },
                    "404": {
                        "description": "Books are not there"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/sortPriceLowToHigh": {
            "get": {
                "summary": "Assending order Books based on Price  ",
                "description": "display all books in assending order based on price",
                "operationId": "bd0bb909757a18ebd06d818f5c84b016",
                "requestBody": {},
                "responses": {
                    "201": {
                        "description": "Sorting Books are Low to high"
                    },
                    "404": {
                        "description": "Books not found"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/sortPriceHighToLow": {
            "get": {
                "summary": "Descending order Books based on Price  ",
                "description": "display all books in Descending order based on price",
                "operationId": "3728e00720050458ad18654cc0378002",
                "requestBody": {},
                "responses": {
                    "201": {
                        "description": "Sorting Books are High to low"
                    },
                    "404": {
                        "description": "Books not found"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/searchBookByKeyword": {
            "post": {
                "summary": "search Book Enter Search Key ",
                "description": "Searching Book using Search key in books table ",
                "operationId": "a8f2325db885c03a9184cbefa2439c10",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "search"
                                ],
                                "properties": {
                                    "search": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Search done Successfully"
                    },
                    "404": {
                        "description": "No Book Found For This Search Key"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/addBookToCartByBookId": {
            "post": {
                "summary": "addBook to cart using book Id ",
                "description": "add book to cart from user  only",
                "operationId": "e06accabe2f8708ced7cea624175038f",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "book_id"
                                ],
                                "properties": {
                                    "book_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book Added to Cart Sucessfully"
                    },
                    "404": {
                        "description": "NOT AN USER"
                    },
                    "401": {
                        "description": "Book already added to the cart"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/deleteBookByCartId": {
            "post": {
                "summary": "Delete Book from cart using Cart Id ",
                "description": "Delete book from cart from user  only",
                "operationId": "ddf2bd9696caf3ef09cffc5794f1a78d",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book deleted succesfully from Cart"
                    },
                    "404": {
                        "description": "Invalid authorization token"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/getAllBooksInCart": {
            "get": {
                "summary": "Display All Books from cart user Id",
                "description": "Display books from cart from user  only",
                "operationId": "6d4226595c3b59939171c49a54bc3d26",
                "requestBody": {},
                "responses": {
                    "201": {
                        "description": "All Books Present in Cart"
                    },
                    "404": {
                        "description": "Invalid Authorization token"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/increamentBookQuantityInCart": {
            "post": {
                "summary": "Add Quantity to Existing Book in cart ",
                "description": "Add Book Quantity  in cart",
                "operationId": "f9c456ebe74f43ddd5838d8baf159fc7",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book Quantity increament success"
                    },
                    "404": {
                        "description": "Invalid authorization token"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/decrementBookQuantityInCart": {
            "post": {
                "summary": "Delete Quantity to Existing Book in cart ",
                "description": "delete Book Quantity  in cart",
                "operationId": "691c4dcb53e7e6cb540dfc84f74c6922",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book Quantity Decreament Success"
                    },
                    "404": {
                        "description": "Invalid authorization token"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/addBookToCartByWishlistId": {
            "post": {
                "summary": "Added the Book in cart by wishlist Id ",
                "description": "Added Book to the cart using wishlist",
                "operationId": "8788a03ad17bd5c2ac336e554fd87f4f",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "wishlist_id"
                                ],
                                "properties": {
                                    "wishlist_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book added to Cart Sucessfully"
                    },
                    "404": {
                        "description": "Invalid authorization token"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/feedback": {
            "post": {
                "summary": "user feedback",
                "description": "feedback from user",
                "operationId": "b02fa70a46a26374bd47556fe186b168",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "feedback"
                                ],
                                "properties": {
                                    "feedback": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "feedback submited successfully"
                    },
                    "401": {
                        "description": "Invalid authorization token"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/forgotPassword": {
            "post": {
                "summary": "forgot password",
                "description": "forgot user password",
                "operationId": "f04608ed3c65a150ce67d9e12421b68c",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "password reset link to respective E-mail"
                    },
                    "404": {
                        "description": "we can not find a user with that email address"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/resetPassword": {
            "post": {
                "summary": "reset password",
                "description": "reset user password",
                "operationId": "bd437661db6f11362ce363815da51517",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "new_password": {
                                        "type": "string"
                                    },
                                    "confirm_password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Password reset successfull!"
                    },
                    "404": {
                        "description": "Can not find a user with this email address"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/placeOrder": {
            "post": {
                "summary": "place Order",
                "description": "place order to address",
                "operationId": "759b5d33d6b538e7c777d7ea76488ea4",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "address_id",
                                    "name",
                                    "quantity"
                                ],
                                "properties": {
                                    "address_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "quantity": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": " Order Successfully Placed and Mail also sent to the user with all details"
                    },
                    "401": {
                        "description": "We Do not have this book in the store"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "summary": "register",
                "description": "register the user for login",
                "operationId": "2f25885f3b6f61ca11724ec302d2e439",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "role",
                                    "first_name",
                                    "last_name",
                                    "phone_no",
                                    "email",
                                    "password",
                                    "confirm_password"
                                ],
                                "properties": {
                                    "role": {
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "phone_no": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "password"
                                    },
                                    "confirm_password": {
                                        "type": "password"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User Successfully Registered"
                    },
                    "401": {
                        "description": "The email has already been taken"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "summary": "user login",
                "description": "the user login to the application",
                "operationId": "0fc9610184083ac6dddab2c63139225a",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "password"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfull Login"
                    },
                    "401": {
                        "description": "Can Not Find User with this email Id"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "summary": "logout",
                "description": " user logout from application ",
                "operationId": "67d5147477c548bfbc3f982833bbc7bd",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successfully Logged out"
                    }
                }
            }
        },
        "/api/addBookToWishlistByBookId": {
            "post": {
                "summary": "Add the book to wishlist",
                "description": " Add book to wishlist",
                "operationId": "71ab0c43383caaf692a993e2141f3554",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "book_id"
                                ],
                                "properties": {
                                    "book_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book added to wishlist Success"
                    },
                    "404": {
                        "description": "Invalid authorization token"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/deleteBookByWishlistId": {
            "post": {
                "summary": "Delete the book to wishlist",
                "description": " Delete book to wishlist",
                "operationId": "7a05c8276280a8da7a90ea527ce0c74b",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book deleted Sucessfully from wishlist"
                    },
                    "404": {
                        "description": "Invalid authorization token"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/getAllBooksInWishlist": {
            "get": {
                "summary": "Get All Books Present in wishlist",
                "description": "DisplayAll Books Present in wishlist",
                "operationId": "e7aa85738c27085d4d936d245a2cc08b",
                "requestBody": {},
                "responses": {
                    "201": {
                        "description": "'Books Present in wishlist :"
                    },
                    "404": {
                        "description": "Invalid Authorization token"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "description": "Laravel bearer token authentication",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}